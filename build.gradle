plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.andriidnikitin.tools'
version = '0.0.1'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

sourceSets {
    functionalTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

ext {
    lombokVersion = '1.18.22'
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'commons-io:commons-io:2.6'

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    functionalTestCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    functionalTestAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    functionalTestCompileOnly "org.projectlombok:lombok:${lombokVersion}"

    functionalTestImplementation 'org.springframework.boot:spring-boot-starter-test'
    functionalTestImplementation 'org.springframework.kafka:spring-kafka-test'
    functionalTestImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    functionalTestAnnotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    functionalTestImplementation 'org.apache.commons:commons-collections4:4.4'
}

tasks.named('test') {
    useJUnitPlatform()
}
